{"ast":null,"code":"var _jsxFileName = \"C:\\\\WPRPRoject\\\\WPR381_Project\\\\frontend\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport \"./Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [zipCode, setZipCode] = useState('');\n  const navigate = useNavigate();\n  const [error, setError] = useState('');\n  const handleFormSubmit = event => {\n    event.preventDefault();\n\n    // Make a POST request to the backend API\n    fetch('http://localhost:8080/weather', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        zipCode\n      })\n    }).then(response => response.json()).then(data => {\n      // Redirect to the CurrentWeather page with the weather data\n      navigate('/current-weather', {\n        state: {\n          weatherData: data,\n          location: zipCode\n        }\n      });\n    }).catch(error => {\n      console.log(error);\n      // Handle error scenarios\n      if (error.message === 'Invalid zip code') {\n        // Display an error message to the user indicating an invalid zip code\n        // For example, you can update the state to show the error message\n        setError('Invalid zip code entered');\n      } else {\n        // Display a generic error message for other errors\n        setError('Error fetching weather data');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-style\",\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Zip Code\",\n        value: zipCode,\n        onChange: event => setZipCode(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-style\",\n        type: \"submit\",\n        children: \"Get Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"oYVIbdUT3Dtue7mHnDzirASlQAU=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Home","_s","zipCode","setZipCode","navigate","error","setError","handleFormSubmit","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","state","weatherData","location","catch","console","log","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/WPRPRoject/WPR381_Project/frontend/src/components/Home.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport \"./Home.css\"\r\nconst Home = () => {\r\n  const [zipCode, setZipCode] = useState('');\r\n  const navigate = useNavigate();\r\n  const [error, setError] = useState('');\r\n\r\n\r\n  const handleFormSubmit = event => {\r\n    event.preventDefault();\r\n  \r\n    // Make a POST request to the backend API\r\n    fetch('http://localhost:8080/weather', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ zipCode })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        // Redirect to the CurrentWeather page with the weather data\r\n        navigate('/current-weather', { state: { weatherData: data, location: zipCode } });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        // Handle error scenarios\r\n        if (error.message === 'Invalid zip code') {\r\n          // Display an error message to the user indicating an invalid zip code\r\n          // For example, you can update the state to show the error message\r\n          setError('Invalid zip code entered');\r\n        } else {\r\n          // Display a generic error message for other errors\r\n          setError('Error fetching weather data');\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>Weather App</h1>\r\n      {error && <p>{error}</p>}\r\n      <form className='form-style' onSubmit={handleFormSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Zip Code\"\r\n          value={zipCode}\r\n          onChange={event => setZipCode(event.target.value)}\r\n        />\r\n        <button className='button-style' type=\"submit\">Get Weather</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACnB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAGtC,MAAMW,gBAAgB,GAAGC,KAAK,IAAI;IAChCA,KAAK,CAACC,cAAc,CAAC,CAAC;;IAEtB;IACAC,KAAK,CAAC,+BAA+B,EAAE;MACrCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEb;MAAQ,CAAC;IAClC,CAAC,CAAC,CACCc,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ;MACAf,QAAQ,CAAC,kBAAkB,EAAE;QAAEgB,KAAK,EAAE;UAAEC,WAAW,EAAEF,IAAI;UAAEG,QAAQ,EAAEpB;QAAQ;MAAE,CAAC,CAAC;IACnF,CAAC,CAAC,CACDqB,KAAK,CAAClB,KAAK,IAAI;MACdmB,OAAO,CAACC,GAAG,CAACpB,KAAK,CAAC;MAClB;MACA,IAAIA,KAAK,CAACqB,OAAO,KAAK,kBAAkB,EAAE;QACxC;QACA;QACApB,QAAQ,CAAC,0BAA0B,CAAC;MACtC,CAAC,MAAM;QACL;QACAA,QAAQ,CAAC,6BAA6B,CAAC;MACzC;IACF,CAAC,CAAC;EACN,CAAC;EACD,oBACEP,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnB1B,KAAK,iBAAIN,OAAA;MAAA4B,QAAA,EAAItB;IAAK;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBhC,OAAA;MAAMiC,SAAS,EAAC,YAAY;MAACC,QAAQ,EAAE1B,gBAAiB;MAAAoB,QAAA,gBACtD5B,OAAA;QACEmC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,gBAAgB;QAC5BC,KAAK,EAAElC,OAAQ;QACfmC,QAAQ,EAAE7B,KAAK,IAAIL,UAAU,CAACK,KAAK,CAAC8B,MAAM,CAACF,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eACFhC,OAAA;QAAQiC,SAAS,EAAC,cAAc;QAACE,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAlDID,IAAI;EAAA,QAESH,WAAW;AAAA;AAAA0C,EAAA,GAFxBvC,IAAI;AAoDV,eAAeA,IAAI;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}